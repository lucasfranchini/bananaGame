(()=>{"use strict";class e{constructor(e,t,s,i,r,a,n){this.context=t,this._x=s,this._y=i,this._speedX=0,this._speedY=0,this._img=new Image(a,n),this._img.src=r,this._canvas=e}draw(){const e=this._img.width,t=this._img.height;this.context.drawImage(this._img,this._x,this._y,e,t)}move(){this._x+=this._speedX,this._y+=this._speedY}get y(){return this._y}get x(){return this._x}get img(){return this._img}}class t extends e{constructor(e,t,s){super(e,t,0,0,s,67,67),this._x=this.generateRandomXPosition()}generateRandomXPosition(){return Math.floor(Math.random()*(this._canvas.width-this._img.width))}isOutOfScreen(){return this._y>this._canvas.height-25}}class s extends t{constructor(e,t){super(e,t,"/assets/bomb.png"),this._speedY=12}updateState(e){this.move(),this.isOutOfScreen()&&e.deleteDropable(this),(e.player.checkCollision(this)||e.player.checkLife())&&(e.player.reduceLife(!0),e.updateLife(),e.end())}}class i extends t{constructor(e,t){super(e,t,"/assets/orange.png"),this._isBanana=!1,this.chooseRandomFruit()}chooseRandomFruit(){const e=Math.random();e<.3?this.generateFruit("/assets/orange.png",65,!1,5,5):e<.6?this.generateFruit("/assets/red-apple.png",65,!1,8,10):e<.8?this.generateFruit("/assets/watermelon.png",82,!1,11,20):e<.95?this.generateFruit("/assets/strawberry.png",65,!1,14,30):this.generateFruit("/assets/banana.png",61,!0,15,1)}generateFruit(e,t,s,i,r){this._img.src=e,this._img.width=t,this._isBanana=s,this._speedY=i,this._points=r}updateState(e){this.move(),this.isOutOfScreen()&&(e.deleteDropable(this),e.player.reduceLife(!1),e.updateLife()),e.player.checkLife()&&e.end(),e.player.checkCollision(this)&&(this._isBanana?e.updateScore(2*e.score):e.updateScore(e.score+this._points),e.deleteDropable(this))}}class r extends e{constructor(e,t,s,i,r){super(e,t,s,i,"/assets/alien.png",64,97),this._maxLife=r,this._actualLife=r,this._x-=64,this._y-=97}updateState(){this.move(),this.stopOnEdge()}startMove(e){"ArrowRight"===e.key?this._speedX=15:"ArrowLeft"===e.key&&(this._speedX=-15)}endMove(e){"ArrowRight"===e.key&&this._speedX>0&&(this._speedX=0),"ArrowLeft"===e.key&&this._speedX<0&&(this._speedX=0)}stopOnEdge(){this._x<0&&(this._x=0),this._x+this._img.width>this._canvas.width&&(this._x=this._canvas.width-this._img.width)}checkCollision(e){const t={y:[this._y,this._y+this._img.height],x:[this._x,this._x+this._img.width]},s={y:[e.y,e.y+e.img.height],x:[e.x,e.x+e.img.width]};return this.collisionOnLeft(t,s)||this.collisionOnRight(t,s)||this.collisionOnCenter(t,s)}collisionOnRight(e,t){return t.x[0]>e.x[0]&&t.x[0]<e.x[1]&&t.y[1]>e.y[0]}collisionOnLeft(e,t){return t.x[1]>e.x[0]&&t.x[1]<e.x[1]&&t.y[1]>e.y[0]}collisionOnCenter(e,t){return t.x[0]<e.x[0]&&t.x[1]>e.x[1]&&t.y[1]>e.y[0]}reduceLife(e){e?this._actualLife=0:this._actualLife--}checkLife(){return 0===this.actualLife}get maxLife(){return this._maxLife}get actualLife(){return this._actualLife}}const a=window.innerWidth,n=window.innerHeight,h=document.querySelector("#canvas"),o=new class{constructor(e,t,s){this._canvas=s,this._canvas.width=e,this._canvas.height=t,this._context=s.getContext("2d")}start(){this._player=new r(this._canvas,this._context,this._canvas.width/2,this._canvas.height-25,4),this._dropables=[],this.scoreInHeader(),this.updateScore(0),this.updateLife(),this.clearIntervals(),this._gameIntervalId=window.setInterval((()=>this.loop()),1e3/60),this._fruitsIntervalId=window.setInterval((()=>this.spawnFruit()),1e3),this._bombsIntervalId=window.setInterval((()=>this.spawnBomb()),2e3)}updateScore(e){const t=document.querySelector(".score");e-this.score>0&&(t.classList.add("highlight"),setTimeout((()=>t.classList.remove("highlight")),100)),this.score=e,t.innerText="Score: "+this.score}updateLife(){const e=document.querySelector(".lifes");e.innerHTML="";for(let t=0;t<this.player.maxLife;t++){const s=new Image(40,40);t>=this.player.actualLife?s.src="/assets/heart-empty.png":s.src="/assets/heart.png",e.appendChild(s)}}spawnFruit(){this._dropables.push(new i(this._canvas,this._context))}spawnBomb(){this._dropables.push(new s(this._canvas,this._context))}loop(){this._player.updateState(),this._dropables.forEach((e=>e.updateState(this))),this.renderGame()}renderGame(){this.clearScreen(),this._player.draw(),this._dropables.forEach((e=>e.draw()))}deleteDropable(e){this._dropables=this._dropables.filter((t=>t!==e))}clearScreen(){this._context.clearRect(0,0,this._canvas.width,this._canvas.height)}onKeyDown(e){if("Enter"===e.key)return this.start();this._player.startMove(e)}onKeyUp(e){this._player.endMove(e)}end(){this._dropables=[],this.clearIntervals(),this.scoreCentered()}scoreCentered(){const e=document.querySelector(".score");e.classList.add("End");const t=document.createElement("span");t.innerText="Press Enter to restart",e.appendChild(t)}scoreInHeader(){document.querySelector(".score").classList.remove("End")}clearIntervals(){clearInterval(this._gameIntervalId),clearInterval(this._fruitsIntervalId),clearInterval(this._bombsIntervalId)}get player(){return this._player}}(a,n,h);o.start(),window.addEventListener("keyup",(e=>{o.onKeyUp(e)})),window.addEventListener("keydown",(e=>{o.onKeyDown(e)}))})();